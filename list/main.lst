C51 COMPILER V9.54   MAIN                                                                  12/06/2024 15:33:21 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: D:\installations\keil_c51\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(.\hal_driver
                    -) DEBUG OBJECTEXTEND PRINT(.\list\main.lst) TABS(2) OBJECT(.\obj\main.obj)

line level    source

   1          /********************************** (C) COPYRIGHT ******************************
   2          * File Name          :Compound_Dev.C                      
   3          * Author             : WCH                                                      
   4          * Version            : V1.0                                                     
   5          * Date               : 2017/03/15                                               
   6          * Description        : A demo for USB compound device created by CH554, support 
   7                       keyboard and mouse, and HID compatible device.           
   8          ********************************************************************************/
   9          #include  ".\Public\CH554.H"
  10          #include  "Compound.h"
  11          #include  ".\Public\debug.h"
  12          #include  "stdio.h"
  13          #include    "key.h"
  14          #include    "Timer.H"
  15          #include "DataFlash.h"
  16          
  17          sbit LED1 = P1^6;     //  P1^6; P3^2;
  18          
  19          extern UINT8  FLAG;                         // Trans complete flag
  20          extern UINT8  EnumOK;                       // Enum ok flag
  21          
  22          void wdog_init(void);
  23          
  24          
  25          void soft_reset(void)
  26          {
  27   1        UINT8 i = 0;
  28   1        for (i = 0; i <= 2; i++)
  29   1        {
  30   2          LED1 = 0;
  31   2        mDelaymS(50);
  32   2        LED1 = 1;
  33   2        mDelaymS(50);
  34   2        }
  35   1      
  36   1        EA = 0;
  37   1        mDelaymS(10);
  38   1      
  39   1        SAFE_MOD = 0x55;
  40   1        SAFE_MOD = 0xAA;
  41   1        GLOBAL_CFG |= bSW_RESET;
  42   1      }
  43          
  44          void led_flash_handler(void)
  45          {
  46   1          // static UINT8 cnt = 0;
  47   1      
  48   1          // if(++cnt >= 50) 
  49   1          // {  
  50   1          //     cnt = 0;
  51   1          //     soft_reset();
  52   1          // }
  53   1          if(++g_compound_heartbeat_timer >= 50) 
  54   1          {  
C51 COMPILER V9.54   MAIN                                                                  12/06/2024 15:33:21 PAGE 2   

  55   2              soft_reset();
  56   2          } 
  57   1      
  58   1      }
  59          
  60          void handle_key_event(key_event_t event)
  61          {
  62   1        switch(event)
  63   1        {
  64   2            case KEY_EVENT_PRESSED:
  65   2            {
  66   3                // usb_send_key("a");
  67   3                usb_send_keys_from_flash();
  68   3              LED1 = 0;
  69   3            mDelaymS(10);
  70   3            LED1 = 1;
  71   3            mDelaymS(10);
  72   3      
  73   3      
  74   3                break;
  75   3            }
  76   2      
  77   2            case KEY_EVENT_RELEASED:
  78   2            {
  79   3                //usb_send_key("a");
  80   3                usb_send_keys_from_flash();
  81   3              LED1 = 0;
  82   3            mDelaymS(10);
  83   3            LED1 = 1;
  84   3            mDelaymS(10);
  85   3      
  86   3                break;
  87   3            }
  88   2            
  89   2            case KEY_EVENT_NONE:
  90   2            {
  91   3                break;
  92   3            }
  93   2      
  94   2            default:
  95   2            {
  96   3                break;
  97   3            }
  98   2      
  99   2        }
 100   1      }
 101          
 102          void main(void)
 103          {
 104   1        UINT8 i = 0;
 105   1      
 106   1        CfgFsys();                                //Configure sys
 107   1        mDelaymS(10);                              //
 108   1        mInitSTDIO( );                            // Init UART0
 109   1      
 110   1        LED1 = 0;
 111   1        mDelaymS(20);
 112   1        LED1 = 1;
 113   1        mDelaymS(20);
 114   1      
 115   1       ReadDataFlash(KEY_VALUES_OFFSET, 8, g_key_values);
 116   1      
C51 COMPILER V9.54   MAIN                                                                  12/06/2024 15:33:21 PAGE 3   

 117   1      #if DE_PRINTF
                  printf( "Start config.\r\n" );
                  printf( "Init USB device.\r\n" );
              #endif
 121   1      
 122   1        USBDeviceInit();                          // Configure the USB module,the Endpoint and the USB Interrupt
 123   1        EA = 1; 
 124   1        UEP1_T_LEN = 0;                           // Reset the trans length register
 125   1        UEP2_T_LEN = 0;                                                  
 126   1        FLAG = 0;
 127   1        EnumOK = 0;
 128   1        key_init();
 129   1        register_key_cb(handle_key_event);
 130   1      
 131   1        timer0_init_10ms();
 132   1        // timer0_register_cb(led_flash_handler);
 133   1        wdog_init();             // 初始化看门狗
 134   1        
 135   1      mDelaymS(500);
 136   1      
 137   1      
 138   1      
 139   1        while(1)
 140   1        {
 141   2          static UINT8 my_cnt = 0;
 142   2          static UINT8 fail_cnt = 0;
 143   2          
 144   2      //    if (!EnumOK)
 145   2      //    {
 146   2      //      soft_reset();
 147   2      //    }
 148   2      
 149   2            if (EnumOK)
 150   2            {
 151   3      //        UINT8 i = 1;
 152   3      //        do
 153   3      //        {
 154   3      //        LED1 = 1;
 155   3      //        } while (i--);
 156   3                if (g_data_ready)
 157   3                {
 158   4                    compound_process_recv_data(g_data_len);
 159   4                    g_data_ready = 0;
 160   4                }
 161   3      
 162   3                // HIDValueHandle();     // 处理HID数据
 163   3                key_scan();
 164   3            }
 165   2            else    /* 如果是一直枚举不起来，那就软复位，重新枚举 */
 166   2            {
 167   3              my_cnt ++;
 168   3      
 169   3      //        LED1 = 1;
 170   3      //        mDelaymS(10);
 171   3      //        LED1 = 0;
 172   3      //        mDelaymS(10);
 173   3              
 174   3              if (my_cnt >= 100)
 175   3              {
 176   4      //          soft_reset();
 177   4                my_cnt = 0; 
 178   4                
C51 COMPILER V9.54   MAIN                                                                  12/06/2024 15:33:21 PAGE 4   

 179   4                
 180   4                EA = 0;  
 181   4                UEP1_T_LEN = 0;  
 182   4                UEP2_T_LEN = 0;  
 183   4                FLAG = 0;
 184   4                EnumOK = 0;
 185   4                
 186   4                USBDeviceInit();  
 187   4                
 188   4                EA = 1;
 189   4      
 190   4                fail_cnt ++;
 191   4      
 192   4                if (fail_cnt >= 3)
 193   4                {
 194   5                  soft_reset();
 195   5                }
 196   4                
 197   4              }
 198   3              
 199   3            }
 200   2            
 201   2              WDOG_COUNT = 0x6F;  // 重置看门狗计数器以防止超时复位
 202   2      
 203   2            mDelaymS(10);
 204   2        }
 205   1      }
 206          
 207          void wdog_init(void)
 208          {
 209   1          // 启用安全模式，写寄存器使能
 210   1          SAFE_MOD = 0x55; // 进入安全模式
 211   1          SAFE_MOD = 0xAA;
 212   1      
 213   1          // 设置 WDOG_COUNT 初始值
 214   1          WDOG_COUNT = 0x49;  // 设置为约 10 秒的计数值 (主频 12MHz)
 215   1      
 216   1          // 使能看门狗
 217   1          GLOBAL_CFG |= bWDOG_EN;  // 允许看门狗复位
 218   1      }
 219          
 220          /**************************** END *************************************/
 221          
 222          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
