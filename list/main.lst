C51 COMPILER V9.54   MAIN                                                                  12/06/2024 18:18:27 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\obj\main.obj
COMPILER INVOKED BY: D:\installations\keil_c51\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(6,SPEED) BROWSE INCDIR(.\hal_driver
                    -) DEBUG OBJECTEXTEND PRINT(.\list\main.lst) TABS(2) OBJECT(.\obj\main.obj)

line level    source

   1          /********************************** (C) COPYRIGHT ******************************
   2          * File Name          :Compound_Dev.C                      
   3          * Author             : WCH                                                      
   4          * Version            : V1.0                                                     
   5          * Date               : 2017/03/15                                               
   6          * Description        : A demo for USB compound device created by CH554, support 
   7                       keyboard and mouse, and HID compatible device.           
   8          ********************************************************************************/
   9          #include  ".\Public\CH554.H"
  10          #include  "Compound.h"
  11          #include  ".\Public\debug.h"
  12          #include  "stdio.h"
  13          #include    "key.h"
  14          #include    "Timer.H"
  15          #include "DataFlash.h"
  16          
  17          sbit LED1 = P1^6;     //  P1^6; P3^2;
  18          
  19          extern UINT8  FLAG;                         // Trans complete flag
  20          extern UINT8  EnumOK;                       // Enum ok flag
  21          
  22          void wdog_init(void);
  23          
  24          
  25          void soft_reset(void)
  26          {
  27   1        UINT8 i = 0;
  28   1        for (i = 0; i <= 2; i++)
  29   1        {
  30   2          LED1 = 0;
  31   2        mDelaymS(50);
  32   2        LED1 = 1;
  33   2        mDelaymS(50);
  34   2        }
  35   1      
  36   1        EA = 0;
  37   1        mDelaymS(10);
  38   1      
  39   1        SAFE_MOD = 0x55;
  40   1        SAFE_MOD = 0xAA;
  41   1        GLOBAL_CFG |= bSW_RESET;
  42   1      }
  43          
  44          void led_flash_handler(void)
  45          {
  46   1          // static UINT8 cnt = 0;
  47   1      
  48   1          // if(++cnt >= 50) 
  49   1          // {  
  50   1          //     cnt = 0;
  51   1          //     soft_reset();
  52   1          // }
  53   1          if(++g_compound_heartbeat_timer >= 50) 
  54   1          {  
C51 COMPILER V9.54   MAIN                                                                  12/06/2024 18:18:27 PAGE 2   

  55   2              soft_reset();
  56   2          } 
  57   1      
  58   1      }
  59          
  60          void handle_key_event(key_event_t event)
  61          {
  62   1        switch(event)
  63   1        {
  64   2            case KEY_EVENT_PRESSED:
  65   2            {
  66   3                  UINT8 key_vals[8] = {0};
  67   3                  UINT8 read_len = ReadDataFlash(KEY_VALUES_OFFSET, 8, key_vals);
  68   3                  if (read_len == 8)
  69   3                  {
  70   4                      // ??key_vals????0xFF(??????????????)
  71   4                      UINT8 i;
  72   4                      UINT8 is_empty = 1;
  73   4                      for (i = 0; i < 8; i++)
  74   4                      {
  75   5                          if (key_vals[i] != 0xFF)
  76   5                          {
  77   6                              is_empty = 0;
  78   6                              break;
  79   6                          }
  80   5                      }
  81   4      
  82   4                      if (is_empty)
  83   4                      {
  84   5                          // Flash??????????,?????'#'??
  85   5                          usb_send_key("#");
  86   5                      }
  87   4                      else
  88   4                      {
  89   5                          // Flash?????????,?????flash????????
  90   5                          usb_send_keys_from_flash();
  91   5                      }
  92   4                  }
  93   3                  else
  94   3                  {
  95   4                      // ????,????:??'#'???????
  96   4                      usb_send_key("#");
  97   4                  }
  98   3      
  99   3                  LED1 = 0;
 100   3                  mDelaymS(10);
 101   3                  LED1 = 1;
 102   3                  mDelaymS(10);
 103   3      
 104   3                  break;
 105   3            }
 106   2      
 107   2            case KEY_EVENT_RELEASED:
 108   2            {
 109   3                          UINT8 key_vals[8] = {0};
 110   3                  UINT8 read_len = ReadDataFlash(KEY_VALUES_OFFSET, 8, key_vals);
 111   3                  if (read_len == 8)
 112   3                  {
 113   4                      // ??key_vals????0xFF(??????????????)
 114   4                      UINT8 i;
 115   4                      UINT8 is_empty = 1;
 116   4                      for (i = 0; i < 8; i++)
C51 COMPILER V9.54   MAIN                                                                  12/06/2024 18:18:27 PAGE 3   

 117   4                      {
 118   5                          if (key_vals[i] != 0xFF)
 119   5                          {
 120   6                              is_empty = 0;
 121   6                              break;
 122   6                          }
 123   5                      }
 124   4      
 125   4                      if (is_empty)
 126   4                      {
 127   5                          // Flash??????????,?????'#'??
 128   5                          usb_send_key("#");
 129   5                      }
 130   4                      else
 131   4                      {
 132   5                          // Flash?????????,?????flash????????
 133   5                          usb_send_keys_from_flash();
 134   5                      }
 135   4                  }
 136   3                  else
 137   3                  {
 138   4                      // ????,????:??'#'???????
 139   4                      usb_send_key("#");
 140   4                  }
 141   3              
 142   3                //usb_send_key("#");
 143   3                //usb_send_keys_from_flash();
 144   3              LED1 = 0;
 145   3            mDelaymS(10);
 146   3            LED1 = 1;
 147   3            mDelaymS(10);
 148   3      
 149   3                break;
 150   3            }
 151   2            
 152   2            case KEY_EVENT_NONE:
 153   2            {
 154   3                break;
 155   3            }
 156   2      
 157   2            default:
 158   2            {
 159   3                break;
 160   3            }
 161   2      
 162   2        }
 163   1      }
 164          
 165          void main(void)
 166          {
 167   1        UINT8 i = 0;
 168   1      
 169   1        CfgFsys();                                //Configure sys
 170   1        mDelaymS(10);                              //
 171   1        mInitSTDIO( );                            // Init UART0
 172   1      
 173   1        LED1 = 0;
 174   1        mDelaymS(20);
 175   1        LED1 = 1;
 176   1        mDelaymS(20);
 177   1      
 178   1       ReadDataFlash(KEY_VALUES_OFFSET, 8, g_key_values);
C51 COMPILER V9.54   MAIN                                                                  12/06/2024 18:18:27 PAGE 4   

 179   1      
 180   1      #if DE_PRINTF
                  printf( "Start config.\r\n" );
                  printf( "Init USB device.\r\n" );
              #endif
 184   1      
 185   1        USBDeviceInit();                          // Configure the USB module,the Endpoint and the USB Interrupt
 186   1        EA = 1; 
 187   1        UEP1_T_LEN = 0;                           // Reset the trans length register
 188   1        UEP2_T_LEN = 0;                                                  
 189   1        FLAG = 0;
 190   1        EnumOK = 0;
 191   1        key_init();
 192   1        register_key_cb(handle_key_event);
 193   1      
 194   1        timer0_init_10ms();
 195   1        // timer0_register_cb(led_flash_handler);
 196   1        wdog_init();             // 初始化看门狗
 197   1        
 198   1      mDelaymS(500);
 199   1      
 200   1      
 201   1      
 202   1        while(1)
 203   1        {
 204   2          static UINT8 my_cnt = 0;
 205   2          static UINT8 fail_cnt = 0;
 206   2          
 207   2      //    if (!EnumOK)
 208   2      //    {
 209   2      //      soft_reset();
 210   2      //    }
 211   2      
 212   2            if (EnumOK)
 213   2            {
 214   3      //        UINT8 i = 1;
 215   3      //        do
 216   3      //        {
 217   3      //        LED1 = 1;
 218   3      //        } while (i--);
 219   3                if (g_data_ready)
 220   3                {
 221   4                    compound_process_recv_data(g_data_len);
 222   4                    g_data_ready = 0;
 223   4                }
 224   3      
 225   3                // HIDValueHandle();     // 处理HID数据
 226   3                key_scan();
 227   3            }
 228   2            else    /* 如果是一直枚举不起来，那就软复位，重新枚举 */
 229   2            {
 230   3              my_cnt ++;
 231   3      
 232   3      //        LED1 = 1;
 233   3      //        mDelaymS(10);
 234   3      //        LED1 = 0;
 235   3      //        mDelaymS(10);
 236   3              
 237   3              if (my_cnt >= 100)
 238   3              {
 239   4      //          soft_reset();
 240   4                my_cnt = 0; 
C51 COMPILER V9.54   MAIN                                                                  12/06/2024 18:18:27 PAGE 5   

 241   4                
 242   4                
 243   4                EA = 0;  
 244   4                UEP1_T_LEN = 0;  
 245   4                UEP2_T_LEN = 0;  
 246   4                FLAG = 0;
 247   4                EnumOK = 0;
 248   4                
 249   4                USBDeviceInit();  
 250   4                
 251   4                EA = 1;
 252   4      
 253   4                fail_cnt ++;
 254   4      
 255   4                if (fail_cnt >= 3)
 256   4                {
 257   5                  soft_reset();
 258   5                }
 259   4                
 260   4              }
 261   3              
 262   3            }
 263   2            
 264   2              WDOG_COUNT = 0x6F;  // 重置看门狗计数器以防止超时复位
 265   2      
 266   2            mDelaymS(10);
 267   2        }
 268   1      }
 269          
 270          void wdog_init(void)
 271          {
 272   1          // 启用安全模式，写寄存器使能
 273   1          SAFE_MOD = 0x55; // 进入安全模式
 274   1          SAFE_MOD = 0xAA;
 275   1      
 276   1          // 设置 WDOG_COUNT 初始值
 277   1          WDOG_COUNT = 0x49;  // 设置为约 10 秒的计数值 (主频 12MHz)
 278   1      
 279   1          // 使能看门狗
 280   1          GLOBAL_CFG |= bWDOG_EN;  // 允许看门狗复位
 281   1      }
 282          
 283          /**************************** END *************************************/
 284          
 285          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    560    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =      2      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
